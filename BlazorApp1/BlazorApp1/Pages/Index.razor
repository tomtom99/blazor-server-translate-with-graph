@page "/"
@page "/{lang}/"

@*inject IStringLocalizer localizer*@



<PageTitle>Index</PageTitle>


<h1>@WMBI.GetTranslation("helloworld")</h1>
@WMBI.GetCurrentLang()
@lang


Welcome to your new app.
<p><a href="/en/">Link to English</a></p>
<p><a href="/pt/">Link to Portugese</a></p>
<Chart Id="pie2" Type="@Chart.ChartType.Pie"
       Data="@(new[] { "1", "2" })"
       BackgroundColor="@(new[] { "blue","green" })"
       Labels="@(new[] { "Fail","Ok" })">
</Chart>

<SurveyPrompt Title="How is Blazor working for you?" />


@code {
    [CascadingParameter(Name = "CascadeWMBI")]
    protected WMBInternationalization WMBI { get; set; }

    [Parameter]
    public string? lang { get; set; }


    private bool SelectedLanguage(string lang)
    {
        return (WMBI.GetCurrentLang() == lang);
    }

    private void ChangeLanguage()
    {
        string selectedString = lang.ToString();
        // selectedString = "en";
        WMBI.SetLanguage(selectedString);
    }


    void SomeStartupMethod()
    {
        // Do Some Work
        ChangeLanguage();
    }

    Task SomeStartupTask()
    {
        // Do some task based work
        return Task.CompletedTask;
    }
    
    protected override async Task OnInitializedAsync()
        {
        SomeStartupMethod();
        await SomeStartupTask();
    }
    protected override void OnAfterRender(bool firstRender)
        {
        // execute conditionally for loading data, otherwise this will load
        ChangeLanguage();
        // every time the page refreshes
        if (firstRender)
            {
            // Do work to load page data and set properties
            }
        }
    
    
}