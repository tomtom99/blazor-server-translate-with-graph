@page "/"
@page "/{lang}/"
@inject IJSRuntime JSRuntime

<PageTitle>Test</PageTitle>
<h1>@WMBI.GetTranslation("helloworld")</h1>

@WMBI.GetCurrentLang()

@lang

<p><a href="/en/">Link to English</a></p>
<p><a href="/pt/">Link to Portugese</a></p>
@currentCount
<Chart Id="pie2" Type="@Chart.ChartType.Pie"
       Data="@(new[] { currentCount.ToString(), "20" })"
       BackgroundColor="@(new[] { "blue","green" })"
       Labels="@(new[] { "Income","Expense" })">
</Chart>
<button class="btn btn-primary" @onclick="IncrementCount">Click me</button>



@code {
    [CascadingParameter(Name = "CascadeWMBI")]
    protected WMBInternationalization WMBI { get; set; }

    [Parameter]
    public string? lang { get; set; }

    private int currentCount = 5;

    private async void IncrementCount()
    {
        currentCount++;
        
        await JSRuntime.InvokeVoidAsync("addData", "Income", currentCount, "Expense",20);
    }

    private bool SelectedLanguage(string lang)
    {
        return (WMBI.GetCurrentLang() == lang);
    }

    private void ChangeLanguage()
    {
        string selectedString = lang.ToString();
        // selectedString = "en";
        WMBI.SetLanguage(selectedString);
    }

    
    protected override async Task OnInitializedAsync()
    {
        ChangeLanguage();
    }
    protected override void OnAfterRender(bool firstRender)
    {
        ChangeLanguage();
    }
    
    
}